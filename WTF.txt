Возможно, человеку, который будет это читать, будет интересно, почему было сделано именно так и не иначе.

По принципу профессиональной вежливости, на этот случай я решил добавить настоящий документ.

Итак, почему...

Нет тестов: если честно, просто не хватило времени :) 

-----------------------------------

Сущности в DBFactory и MessageProcessors не наследуются от интерфейсов, в отличии от остального кода:

для DAL.Redis я выделил сущности, чтобы "домен" ничего не знал о деталях реализации доступа к данным;
выделил интерфейс для печати, т.к. рука не поднимается писать сущность, которая делает Console.WriteLine в сборке Logic;
RedisDBFactory и RedisEntitiesNames используются только внутри сборки и, на данный момент, не нуждаются в вынесении за интерфейс
Сущности в папке MessageProcessors так же на данный момент не нуждаются в интерфейсах, кроме MessageQueueState

-----------------------------------

Создаётся connection на каждый чих:

Откровенно говоря, не знаю, подходит ли здесь решение в виде кеширования в статическом поле
единожды создаваемого соединения, какую нагрузку даёт постоянное создание соединения, 
какие особенности в этой выбранной методом тыка библиотеке для работы с redis, какие есть best practices здесь.
В сущности, это первый раз, когда я работаю с redis :)
Поэтому реализовал в лоб самый простой вариант.  

